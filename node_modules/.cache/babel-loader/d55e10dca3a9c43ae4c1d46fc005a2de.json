{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\nconst language = ['az', 'en'];\ni18n\n// load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n// want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n.use(Backend)\n// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)\n// pass the i18n instance to react-i18next.\n.use(initReactI18next)\n// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  fallbackLng: 'en',\n  debug: true,\n  whitelist: language,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n  }\n});\n\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","Backend","LanguageDetector","language","use","init","fallbackLng","debug","whitelist","interpolation","escapeValue"],"sources":["/home/samil/Masaüstü/proje DEXUR-VAR/src/config/i18n.jsx"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\nconst language = ['az','en'];\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    whitelist:language,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D;AACA;AACA;AACA,MAAMC,QAAQ,GAAG,CAAC,IAAI,EAAC,IAAI,CAAC;AAE5BJ;AACE;AACA;AACA;AAAA,CACCK,GAAG,CAACH,OAAO;AACZ;AACA;AAAA,CACCG,GAAG,CAACF,gBAAgB;AACrB;AAAA,CACCE,GAAG,CAACJ,gBAAgB;AACrB;AACA;AAAA,CACCK,IAAI,CAAC;EACJC,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAE,IAAI;EACXC,SAAS,EAACL,QAAQ;EAClBM,aAAa,EAAE;IACbC,WAAW,EAAE,KAAK,CAAE;EACtB;AACF,CAAC,CAAC;;AAGJ,eAAeX,IAAI"},"metadata":{},"sourceType":"module"}